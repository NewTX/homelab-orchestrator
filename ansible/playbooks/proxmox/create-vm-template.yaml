---
- name: Playbook to Create VM template
  hosts: '{{proxmox_hostname}}'
  gather_facts: false
  vars:
    rhel_down_version: '9.5'
    rhel_down_token_url: 'https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token'
    rhel_down_images_url: 'https://api.access.redhat.com/management/v1/images/rhel/{{ rhel_down_version }}/x86_64'
    storageName: 'nvme'
    debian_qcow_url: 'https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-generic-amd64.qcow2'
  vars_files:
    - ../../vars/common.vault.yaml
  tasks:
    - name: Create cloud-init folder
      ansible.builtin.file:
        path: /var/lib/vz/snippets/
        state: directory
        mode: '0755'

    - name: Copy cloud-init file to proxmox
      ansible.builtin.template:
        src: ../../templates/{{ vm_name }}.yaml.j2
        dest: /var/lib/vz/snippets/{{ vm_name }}.yaml
        force: true
        mode: 'u=rw,g=r,o=r'

    - name: Retrieve information about specific VM by ID
      community.general.proxmox_vm_info:
        api_user: '{{ datacenter.username }}@pve'
        api_password: '{{ datacenter.password }}'
        api_host: '{{proxmox_hostname}}.{{domain_internal}}'
        node: '{{ proxmox_node }}'
        vmid: '{{ id }}'
      register: vm_info
      delegate_to: localhost

    - name: Execute when template doesn't exist
      when: vm_info.proxmox_vms | length == 0
      block:
        - name: Execute when template is to deploy RHEL VM
          when: '"rhel" in vm_name'
          block:
            - name: Import RHEL login and download task
              ansible.builtin.import_tasks: rhel-image.yaml
            - ansible.builtin.set_fact:
                filename: '{{ __rhel_down_images[0].filename }}'

        - name: Execute when template is to deploy Debian VM
          when: '"debian" in vm_name'
          block:
            - name: Downloading the latest qcow image
              ansible.builtin.get_url:
                url: '{{ debian_qcow_url }}'
                dest: '/tmp/debian-12-generic-amd64.qcow2'
                mode: 0644
            - ansible.builtin.set_fact:
                filename: 'debian-12-generic-amd64.qcow2'

        - name: Create a VM to use as a template
          ansible.builtin.command: 'qm create {{ id }} --name {{ vm_name }} --memory 4096 --cores 2 --net0 virtio,bridge=vmbr0 --cpu cputype=max'

        - name: Import disk image
          ansible.builtin.command: 'qm importdisk {{ id }} /tmp/{{ filename }} {{storageName}}'

        - name: Configure VM to use imported image
          ansible.builtin.command: 'qm set {{ id }} --scsihw virtio-scsi-pci --scsi0 {{storageName}}:vm-{{ id }}-disk-0'

        - name: Add cloud-init image as CDROM
          ansible.builtin.command: 'qm set {{ id }} --ide2 {{storageName}}:cloudinit --ipconfig0 ip=dhcp'

        - name: Configure boot from the image
          ansible.builtin.command: 'qm set {{ id }} --boot c --bootdisk scsi0'

        - name: Attach serial console
          ansible.builtin.command: 'qm set {{ id }} --serial0 socket --vga serial0'

        - name: Enable agent
          ansible.builtin.command: 'qm set {{ id }} --agent enabled=1'

        - name: Set boot to start
          ansible.builtin.command: qm set {{ id }} --onboot 1

        - name: Create template
          ansible.builtin.command: 'qm template {{ id }}'
