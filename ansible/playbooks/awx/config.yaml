---
- name: Playbook to configure ansible controller post installation
  hosts: localhost
  connection: local
  environment:
    CONTROLLER_HOST: '{{ controller_hostname }}'
    CONTROLLER_USERNAME: '{{ controller_username }}'
    CONTROLLER_PASSWORD: '{{ controller_password }}'
    CONTROLLER_VERIFY_SSL: 'false'
    GATEWAY_HOSTNAME: '{{ controller_hostname }}'
    GATEWAY_USERNAME: '{{ controller_username }}'
    GATEWAY_PASSWORD: '{{ controller_password }}'
    GATEWAY_VERIFY_SSL: 'false'
  vars_files:
    - ../../vars/common.vault.yaml
  tasks:
    - name: Get absolute path to this Git repository
      ansible.builtin.command: git rev-parse --show-toplevel
      delegate_to: localhost
      become: false
      run_once: true
      register: repository_path
      changed_when: false
      check_mode: false
      failed_when: repository_path.rc != 0

    - name: Set the license using a file
      ansible.controller.license:
        manifest: '{{ repository_path.stdout }}/manifest_subscription.zip'
        validate_certs: false

    - name: Authenticators | Configuration # noqa fqcn[action-core]
      ansible.platform.authenticator:
        name: 'Authentik'
        type: 'ansible_base.authentication.authenticator_plugins.oidc'
        enabled: true
        configuration:
          OIDC_ENDPOINT: '{{OIDC_ENDPOINT}}'
          KEY: '{{CLIENT_ID}}'
          SECRET: '{{CLIENT_SECRET}}'
          GROUPS_CLAIM: 'groups'

    - name: Authenticator Map | Configuration
      ansible.platform.authenticator_map:
        name: 'Authentik Map'
        authenticator: 'Authentik'
        revoke: true
        map_type: is_superuser
        triggers:
          groups:
            has_or:
              - 'admins'

    - name: Add webhook notification
      ansible.controller.notification_template:
        name: Gotify
        notification_type: webhook
        organization: Default
        notification_configuration:
          url: '{{GOTIFY_APPLICATION_WEBHOOK}}'
          headers:
            'accept': 'application/json'
            'Content-Type': 'application/json'
        state: present

    - name: Add notifiers to Default Organization
      ansible.controller.organization:
        name: Default
        notification_templates_error: ['Gotify']
        state: present

    - name: Create an inventory
      ansible.controller.inventory:
        name: '{{ awx_inventory_name }}'
        organization: Default

    - name: Automation Hub Credentials
      ansible.controller.credential:
        name: Automation Hub Credentials
        credential_type: Ansible Galaxy/Automation Hub API Token
        organization: Default
        inputs:
          url: https://console.redhat.com/api/automation-hub/
          auth_url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
          token: '{{ automation_hub_token }}'

    - name: Machine Credentials
      ansible.controller.credential:
        name: Host Credentials
        credential_type: Machine
        organization: Default
        inputs:
          username: '{{ host_user }}'
          password: '{{ host_password }}'
          ssh_key_data: "{{ lookup('file', '/Users/vikaspogu/.ssh/id_rsa') }}"

    - name: Quay Credentials
      ansible.controller.credential:
        name: Quay Credentials
        credential_type: Container Registry
        organization: Default
        inputs:
          host: quay.io
          username: '{{ quay_username }}'
          password: '{{ quay_password }}'

    - name: Ansible Vault Credentials
      ansible.controller.credential:
        name: Vault Credentials
        credential_type: Vault
        organization: Default
        inputs:
          vault_password: '{{ vault_password }}'

    - name: Update organization that pulls content from galaxy.ansible.com
      ansible.controller.organization:
        name: 'Default'
        state: present
        galaxy_credentials:
          - Ansible Galaxy
          - Automation Hub Credentials

    - name: Add EE to the controller instance
      ansible.controller.execution_environment:
        name: 'Custom EE'
        image: quay.io/rhn_gps_vpogu/custom-aap24-ee-rhel9:2.1.0
        credential: 'Quay Credentials'

    - name: '{{ awx_project_name }}'
      ansible.controller.project:
        name: '{{ awx_project_name }}'
        organization: Default
        state: present
        scm_update_on_launch: true
        scm_delete_on_update: true
        scm_type: git
        default_environment: 'Custom EE'
        scm_url: https://github.com/Vikaspogu/homelab-orchestrator.git

    - name: Add inventory source to inventory
      ansible.controller.inventory_source:
        name: 'scm-inventory'
        description: Source for inventory
        inventory: '{{ awx_inventory_name }}'
        overwrite: true
        update_on_launch: true
        organization: Default
        source: 'scm'
        source_project: '{{ awx_project_name }}'
        source_path: 'ansible/inventory/hosts.yaml'

    - name: Create a Job Template with no survey
      ansible.builtin.import_tasks: ../../awx/job_templates/job-template-no-survey.yaml
      register: job_templates
      until: not job_templates.failed
      retries: 10
      delay: 10

    - name: Create a Job Template with survey
      ansible.builtin.import_tasks: ../../awx/job_templates/job-template-survey.yaml
      register: job_templates_survery
      until: not job_templates_survery.failed
      retries: 10
      delay: 10

    - name: Create 3 node cluster workflow
      ansible.builtin.import_tasks: ../../awx/workflows/openshift-cluster.yaml
      register: acm_cluster_workflow
      until: not acm_cluster_workflow.failed
      retries: 10
      delay: 10
