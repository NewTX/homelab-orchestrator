---
- name: Deploy VM on odin controller
  hosts: pxm-odin
  gather_facts: false
  vars_files:
    - ../../vars/common.vault.yaml
  tasks:
    - name: Import Proxmox Role
      ansible.builtin.include_role:
        name: ../../roles/proxmox
      vars:
        template_id: 9002
        template_name: debian-cloudinit-template
        template_storage: synology-lun01
        proxmox_hostname: 'pxm-odin'
        vm_name: node-odin
        mac_address: bc:24:11:de:0b:d6
        cores: 14
        memory: 30480
        disk_size: 212G
        storage_name: nvme
        vm_state: create

- name: Post Configuration
  hosts: node-odin.vikaspogu.internal
  gather_facts: false
  vars_files:
    - ../../vars/common.vault.yaml
  pre_tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      ansible.builtin.wait_for_connection:
        delay: 5
        timeout: 600
  roles:
    - role: ansible-role-docker
  tasks:
    - name: Run as root user
      become: true
      block:
        - name: Set a hostname
          ansible.builtin.hostname:
            name: '{{inventory_hostname}}'

        - name: Install required packages
          ansible.builtin.apt:
            name:
              - qemu-guest-agent
              - git
              - wget
              - unzip
              - tar
              - rsync
              - python3
              - python3-pip
              - apt-transport-https
              - ca-certificates
              - curl
              - software-properties-common
              - virtualenv

        - name: Update apt repo and cache on all Debian/Ubuntu boxes
          ansible.builtin.apt:
            update_cache: true
            force_apt_get: true
            cache_valid_time: 3600

        - name: Upgrade all packages on servers
          ansible.builtin.apt:
            upgrade: dist
            force_apt_get: true

        - name: Check if a reboot is needed on all servers
          register: reboot_required_file
          ansible.builtin.stat:
            path: /var/run/reboot-required
            get_md5: false

        - name: Reboot the box if kernel updated
          ansible.builtin.reboot:
            msg: 'Reboot initiated by Ansible for kernel updates'
            connect_timeout: 5
            reboot_timeout: 300
            pre_reboot_delay: 0
            post_reboot_delay: 30
            test_command: uptime
          when: reboot_required_file.stat.exists

        - name: Enable a timer unit for dnf-automatic
          ansible.builtin.systemd_service:
            name: qemu-guest-agent
            state: started
            enabled: true

    - name: Initialize Docker Swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: '{{ ansible_host }}'
        listen_addr: '0.0.0.0'
      register: master_output

    # - name: Create a directory to store the komodo files
    #   ansible.builtin.file:
    #     path: /home/{{ ansible_user }}/komodo
    #     state: directory

    # - name: Template a file for the komodo-compose.yaml file
    #   ansible.builtin.template:
    #     src: '../../templates/komodo-compose.yaml.j2'
    #     dest: /home/{{ ansible_user }}/komodo/compose.yaml

    # - name: Docker compose up
    #   ansible.builtin.command: docker-compose up -d
    #   args:
    #     chdir: /home/{{ ansible_user }}/komodo
